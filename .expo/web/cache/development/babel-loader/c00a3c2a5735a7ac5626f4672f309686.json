{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\esti-projects\\\\react-native-master\\\\src\\\\components\\\\ForecastCard\\\\index.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Text, Divider } from 'react-native-elements';\nimport { Collapse, CollapseHeader, CollapseBody } from 'accordion-collapse-react-native';\n\nvar ForecastCard = function (_Component) {\n  _inherits(ForecastCard, _Component);\n\n  var _super = _createSuper(ForecastCard);\n\n  function ForecastCard() {\n    _classCallCheck(this, ForecastCard);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ForecastCard, [{\n    key: \"_renderHeader\",\n    value: function _renderHeader() {\n      var windowWidth = Dimensions.get('window').width;\n      var date = new Date(this.props.detail[0].dt * 1000);\n      var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      var dayOfWeek = days[date.getDay()];\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: {\n          flexDirection: 'column',\n          justifyContent: 'space-between',\n          alignItems: 'center'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 5\n        }\n      }, dayOfWeek, \"   \", this.props.detail[0].dt_txt.substr(0, 10), \" \"), React.createElement(Divider, {\n        style: {\n          backgroundColor: '#dfe6e9',\n          marginVertical: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 5\n        }\n      }), React.createElement(FlatList, {\n        style: {\n          width: windowWidth * 0.9\n        },\n        horizontal: true,\n        pagingEnabled: true,\n        key: function key(item) {\n          return item.dt_text;\n        },\n        showsHorizontalScrollIndicator: true,\n        data: this.props.detail,\n        renderItem: this._renderWeatherList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      })));\n    }\n  }, {\n    key: \"_renderWeatherList\",\n    value: function _renderWeatherList(item) {\n      var time;\n      var date = new Date(item.item.dt * 1000);\n      var hours = date.getHours();\n      var minutes = \"0\" + date.getMinutes();\n      time = hours + ':' + minutes.substr(-2);\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      }, React.createElement(Text, {\n        style: styles.time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }\n      }, time), React.createElement(Image, {\n        style: {\n          width: 60,\n          height: 60\n        },\n        source: {\n          uri: \"https://openweathermap.org/img/w/\" + item.item.weather[0].icon + \".png\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        style: styles.time,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }\n      }, Math.round(item.item.main.temp * 10) / 10, \"\\u2103\"));\n    }\n  }, {\n    key: \"_renderContent\",\n    value: function _renderContent() {\n      var content = this.props.content;\n      var description = this.props.detail[0].weather[0].description;\n      var date = new Date(content.sunrise * 1000);\n      var hours = date.getHours();\n      var minutes = \"0\" + date.getMinutes();\n      var sunrise = hours + ':' + minutes.substr(-2);\n      var date = new Date(content.sunset * 1000);\n      var hours = date.getHours();\n      var minutes = \"0\" + date.getMinutes();\n      var sunset = hours + ':' + minutes.substr(-2);\n      return React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 5\n        }\n      }, React.createElement(Divider, {\n        style: {\n          backgroundColor: '#dfe6e9',\n          marginVertical: 10\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      }), React.createElement(Text, {\n        style: styles.notes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }\n      }, \"Sunrise: \", sunrise), React.createElement(Text, {\n        style: styles.notes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }\n      }, \"Sunset: \", sunset), React.createElement(Text, {\n        style: styles.notes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }\n      }, \"Description: \", description), React.createElement(Text, {\n        style: styles.notes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }\n      }, \"wind speed: \", content.wind.spead, \" \", content.wind.deg));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: styles.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }\n      }, React.createElement(Collapse, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, React.createElement(CollapseHeader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 5\n        }\n      }, this._renderHeader()), React.createElement(CollapseBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      }, this._renderContent())));\n    }\n  }]);\n\n  return ForecastCard;\n}(Component);\n\nexport { ForecastCard as default };\nvar styles = StyleSheet.create({\n  card: {\n    backgroundColor: 'rgba(56, 172, 236, 1)',\n    borderWidth: 0,\n    borderRadius: 20,\n    marginVertical: 10,\n    marginHorizontal: 5,\n    padding: 5\n  },\n  time: {\n    fontSize: 15\n  },\n  notes: {\n    paddingHorizontal: 5,\n    fontSize: 15\n  },\n  header: {\n    paddingHorizontal: 5,\n    fontSize: 16,\n    paddingVertical: 3,\n    fontWeight: '500'\n  },\n  scrollSnapType: {\n    width: 95\n  }\n});","map":{"version":3,"sources":["C:/esti-projects/react-native-master/src/components/ForecastCard/index.jsx"],"names":["React","Component","Text","Divider","Collapse","CollapseHeader","CollapseBody","ForecastCard","windowWidth","Dimensions","get","width","date","Date","props","detail","dt","days","dayOfWeek","getDay","flexDirection","justifyContent","alignItems","styles","header","dt_txt","substr","backgroundColor","marginVertical","item","dt_text","_renderWeatherList","time","hours","getHours","minutes","getMinutes","height","uri","weather","icon","Math","round","main","temp","content","description","sunrise","sunset","notes","wind","spead","deg","card","_renderHeader","_renderContent","StyleSheet","create","borderWidth","borderRadius","marginHorizontal","padding","fontSize","paddingHorizontal","paddingVertical","fontWeight","scrollSnapType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport { StyleSheet, View, Image, FlatList ,Dimensions } from 'react-native';\r\nimport { Text,Divider } from 'react-native-elements';\r\nimport {Collapse,CollapseHeader, CollapseBody} from 'accordion-collapse-react-native';\r\nexport default class ForecastCard extends Component {\r\n  _renderHeader(){\r\n    const windowWidth = Dimensions.get('window').width;\r\n    var date = new Date(this.props.detail[0].dt*1000);\r\n    var days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\r\n    var dayOfWeek = days[date.getDay()]\r\n\r\n\r\n    return(\r\n      <View>\r\n          <View style={{flexDirection:'column', justifyContent:'space-between', alignItems:'center'}}>\r\n    <Text style={styles.header}>{dayOfWeek}   {this.props.detail[0].dt_txt.substr(0,10)} </Text>\r\n    <Divider style={{ backgroundColor: '#dfe6e9', marginVertical:10}} />\r\n      <FlatList\r\n        style={{width: windowWidth*0.9}}\r\n      horizontal\r\n      pagingEnabled={true}\r\n      key={item => item.dt_text} \r\n      showsHorizontalScrollIndicator={true}\r\n      data={this.props.detail}\r\n      renderItem={this._renderWeatherList}\r\n      />\r\n          </View>\r\n      </View>\r\n    )\r\n  }\r\n  _renderWeatherList(item){\r\n    let time;\r\n    var date = new Date(item.item.dt*1000);\r\n    var hours = date.getHours();\r\n    var minutes = \"0\" + date.getMinutes();\r\n    time = hours + ':' + minutes.substr(-2);\r\n    return(\r\n      <View>\r\n          <Text style={styles.time}>{time}</Text>\r\n          <Image style={{width:60, height:60}} source={{uri:\"https://openweathermap.org/img/w/\" + item.item.weather[0].icon + \".png\"}} />\r\n          <Text style={styles.time}>{Math.round( item.item.main.temp * 10) / 10 }&#8451;</Text>\r\n      </View>\r\n    )\r\n  }\r\n  _renderContent(){\r\n    const {content}=this.props;\r\n    var description =this.props.detail[0].weather[0].description\r\n    var date = new Date(content.sunrise*1000);\r\n    var hours = date.getHours();\r\n    var minutes = \"0\" + date.getMinutes();\r\n    let sunrise = hours + ':' + minutes.substr(-2);\r\n    var date = new Date(content.sunset*1000);\r\n    var hours = date.getHours();\r\n    var minutes = \"0\" + date.getMinutes();\r\n    let sunset = hours + ':' + minutes.substr(-2);\r\n    return (\r\n    <View>\r\n      <Divider style={{ backgroundColor: '#dfe6e9', marginVertical:10}} />\r\n          <Text style={styles.notes}>Sunrise: {sunrise}</Text>\r\n          <Text style={styles.notes}>Sunset: {sunset}</Text>\r\n          <Text style={styles.notes}>Description: {description}</Text>\r\n          <Text style={styles.notes}>wind speed: {content.wind.spead} {content.wind.deg}</Text>\r\n    </View>);\r\n  }\r\n  render(){\r\n    return (\r\n      <View style={styles.card}>\r\n        <Collapse>\r\n    <CollapseHeader>\r\n      {this._renderHeader()}\r\n    </CollapseHeader>\r\n    <CollapseBody>\r\n      {this._renderContent()}\r\n    </CollapseBody>\r\n</Collapse>\r\n      </View>\r\n  );\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  card:{\r\n    backgroundColor:'rgba(56, 172, 236, 1)',\r\n    borderWidth:0,\r\n    borderRadius:20,\r\n    marginVertical: 10,\r\n    marginHorizontal: 5,\r\n    padding: 5,\r\n},\r\ntime:{\r\n  fontSize:15\r\n},\r\nnotes: {\r\n  paddingHorizontal: 5,\r\n  fontSize: 15,\r\n},\r\nheader: {\r\n  paddingHorizontal: 5,\r\n  fontSize: 16,\r\n  paddingVertical: 3,\r\n  fontWeight: '500'\r\n},\r\nscrollSnapType:{\r\n  width:95\r\n}\r\n});\r\n"]},"metadata":{},"sourceType":"module"}